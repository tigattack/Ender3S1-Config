# Mainsail klipper definitions
#
# Copyright (C) 2021 Alex Zellner <alexander.zellner@googlemail.com>
#
# This file may be distributed under the terms of the GNU GPLv3 license
#
# Version 1.11

# add [include mainsail.cfg] to your printer.cfg to include it to your printer.cfg
# modify x_park, y_park, z_park_delta and extrude value at the macro _TOOLHEAD_PARK_PAUSE_CANCEL if needed

# use variable_park: False at CANCEL_PRINT to disallow the parking move

[virtual_sdcard]
path: ~/gcode_files
on_error_gcode:
  CANCEL_PRINT

[pause_resume]

[display_status]

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  M106 S0
  CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY) %}
  {% else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  RESUME_BASE {get_params}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro START_PRINT]
gcode:
      #Get Printer built volume dimensions
      {% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}
      {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}
      {% set Z_MAX = printer.toolhead.axis_maximum.z|default(100)|float %}

      #Get Bed and Extruder temperature from Slicer GCode
      {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
      {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
      #Preheat nozzle and bed
      M104 S{EXTRUDER_TEMP} T0
      M140 S{BED_TEMP}

      #Home
      {action_respond_info("Homing")}
      G28

      #Move up to clean bed
      G1 Y{Y_MAX - 20} Z{Z_MAX/4.0} F6000

      #Heat nozzle and bed
      M190 S{BED_TEMP}
      M109 S{EXTRUDER_TEMP} T0
      #Part cooling fan 100%
      M106 S255

      #Mesh loading
      {action_respond_info("Loading default mesh.")}
      M117 Mesh Load
      BED_MESH_PROFILE LOAD=default
      {action_respond_info("Loaded mesh, apparently.")}
      M117 Mesh loaded

      #Prime line
      M117 Prime Line
      G92 E0 ;Reset Extruder
      # move z axis
      G1 Z2.0 F3000 ;Move Z Axis up
      # move to prime position 
      G1 X10.1 Y30 Z0.28 F5000.0 ;Move to start position
      G1 X10.1 Y200.0 Z0.28 F1500.0 E15 ;Draw the first line
      G1 X12.1 Y200.0 Z0.28 F5000.0 ;Move to side a little
      G1 X12.1 Y50 Z0.28 F1500.0 E30 ;Draw the second line
      G92 E0 ;Reset Extruder
      G1 Z2.0 F3000 ;Move Z Axis up
      M117 Printing


[gcode_macro END_PRINT]
gcode:
        #Get Printer built volume dimensions
        {% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}
        {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}
        {% set Z_MAX = printer.toolhead.axis_maximum.z|default(100)|float %}

        #Fix-up extruder
        G91
        G1 E-2 F2700
        G1 E-1.5 Z0.2 F2400
        G1 X5 Y5 F6000
        G1 Z10
        G90

        #Present print
        #Work out how high we can go
        {% if (printer.toolhead.position.z + 100) > Z_MAX %}
          G1 Z{Z_MAX} F600
        {% else %}
          G1 Z{printer.toolhead.position.z + 100} F600
        {% endif %}
        G1 X{X_MAX / 2} Y{Y_MAX} F6000
        M106 S0
        M104 S0
        M140 S0

        #Disable Steppers
        M84 X Y E

        # Power off printer
        UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

# https://github.com/tinntbg/auto-power-off-klipper
[gcode_macro _POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                              device="printer",
                              state="off")}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode:
  {% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
    {% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
        {% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
            _POWER_OFF_PRINTER
        {% else %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
        {% endif %}
    {% else %}
        {% if printer.idle_timeout.state == "Printing" %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
        {% else %}
            {% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
                UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
            {% else %}
                UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
            {% endif %}
        {% endif %}
    {% endif %}
  {% endif %}

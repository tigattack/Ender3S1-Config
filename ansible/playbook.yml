---
- name: 3D Printer Pi Setup
  hosts: all
  become: true
  vars:
    ssh_pubkey: ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIF5Buzvlm9muLrosWs1MfpnecnxzIlSoox1OF8LkRAmD tig@tiga.tech
  tasks:
    - name: Set hostname
      ansible.builtin.hostname:
        name: PrinterPi
        use: debian
      notify: Reboot

    - name: Install SSH key
      ansible.posix.authorized_key:
        user: "{{ ansible_user }}"
        key: "{{ ssh_pubkey }}"

    - name: Packages block
      block:
        - name: Install python3-pip
          ansible.builtin.apt:
            name: python3-pip
            state: present

        - name: Disable Python pip's externally managed environment warning
          ansible.builtin.shell:
            cmd: find /usr/lib/python3* -name EXTERNALLY-MANAGED -exec rm -v {} +
          register: rm_pip_externally_managed
          changed_when: "'removed' in rm_pip_externally_managed.stdout"

        - name: Install glances
          ansible.builtin.pip:
            name: glances
            state: present

    - name: Copy config block
      tags: config
      block:
        - name: Copy crowsnest config
          ansible.builtin.copy:
            src: ../klipper_config/crowsnest.conf
            dest: /home/{{ ansible_user }}/klipper_config/crowsnest.conf
            mode: 0644
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
          notify: Restart crowsnest

        - name: Copy mainsail config
          ansible.builtin.copy:
            src: ../klipper_config/mainsail.cfg
            dest: /home/{{ ansible_user }}/klipper_config/mainsail.cfg
            mode: 0644
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
          notify: Restart klipper

        - name: Copy moonraker config
          ansible.builtin.copy:
            src: ../klipper_config/moonraker.conf
            dest: /home/{{ ansible_user }}/klipper_config/moonraker.conf
            mode: 0644
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
          notify: Restart moonraker

        - name: Copy timelapse config
          ansible.builtin.copy:
            src: ../klipper_config/timelapse.cfg
            dest: /home/{{ ansible_user }}/klipper_config/timelapse.cfg
            mode: 0644
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
          notify: Restart moonraker

        - name: Copy klipper config
          ansible.builtin.copy:
            src: ../klipper_config/printer.cfg
            dest: /home/{{ ansible_user }}/klipper_config/printer.cfg
            mode: 0644
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
          notify: Restart klipper

        - name: Copy sonar config
          ansible.builtin.copy:
            src: ../klipper_config/sonar.conf
            dest: /home/{{ ansible_user }}/klipper_config/sonar.conf
            mode: 0644
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
          notify: Restart sonar

        - name: Copy Moonraker secrets
          ansible.builtin.copy:
            src: ../moonraker_secrets.conf
            dest: /home/{{ ansible_user }}/printer_data/moonraker.secrets
            mode: 0440
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
          notify: Restart moonraker

  handlers:
    - name: Reboot
      ansible.builtin.reboot:

    - name: Restart crowsnest
      ansible.builtin.systemd:
        name: crowsnest
        state: restarted

    - name: Restart klipper
      ansible.builtin.systemd:
        name: klipper
        state: restarted

    - name: Restart moonraker
      ansible.builtin.systemd:
        name: moonraker
        state: restarted

    - name: Restart sonar
      ansible.builtin.systemd:
        name: sonar
        state: restarted
